{% extends "vhost/php" %}

{% set drupal_version = drupal_version|default(app) %}

{% block server -%}
## Include the caching setup. Needed for using Drupal with an external cache.
include apps/drupal/map_cache.conf;
{%- endblock %}

{% block body_php %}
    ### Nginx configuration for Drupal. This configuration makes use of
    ### drush (http:///drupal.org/project/drush) for site maintenance
    ### and like tasks:
    ###
    ### 1. Run the cronjobs.
    ### 2. Run the DB and code updates: drush up or drush upc followed by
    ###    drush updb to run any DB updates required by the code upgrades
    ###    that were performed.
    ### 3. Disabling of xmlrpc.xml, install.php (needed only for
    ###    installing the site) and update.php: all updates are now
    ###    handled through drush.

    location / {
        ## Drupal 404 from can impact performance. If using a module like
        ## search404 then 404's *have *to be handled by Drupal. Uncomment to
        ## relay the handling of 404's to Drupal.
        error_page 404 /index.php;

        ## Using a nested location is the 'correct' way to use regexes.
        # use location {% block drupal_target %}@drupal{% endblock %}
        # and {% block drupal_target_no_args %}@drupal-no-args{% endblock %}

        ## Regular private file serving (i.e. handled by Drupal).
        location ^~ /system/files/ {
            ## Include the specific FastCGI configuration. This is for a
            ## FCGI backend like php-cgi or php-fpm.
            include apps/drupal/fastcgi_drupal.conf;
            fastcgi_pass server;

            ## For not signaling a 404 in the error log whenever the
            ## system/files directory is accessed add the line below.
            ## Note that the 404 is the intended behavior.
            log_not_found off;
        }

        ## Trying to access private files directly returns a 404.
        location ^~ /sites/default/files/private/ {
            internal;
        }

        ## Support for the file_force module
        ## http://drupal.org/project/file_force.
        location ^~ /system/files_force/ {
            ## Include the specific FastCGI configuration. This is for a
            ## FCGI backend like php-cgi or php-fpm.
            include apps/drupal/fastcgi_drupal.conf;
            fastcgi_pass server;

            ## For not signaling a 404 in the error log whenever the
            ## system/files directory is accessed add the line below.
            ## Note that the 404 is the intended behavior.
            log_not_found off;
        }

        ## If accessing an image generated by Drupal 6 imagecache, serve it
        ## directly if available, if not relay the request to Drupal to (re)generate
        ## the image.
        location ~* /imagecache/ {
            ## Image hotlinking protection. If you want hotlinking
            ## protection for your images uncomment the following line.
            #include apps/drupal/hotlinking_protection.conf;

            access_log off;
            expires 30d;
            try_files $uri {{ self.drupal_target() }};
        }

        ## Drupal 7 generated image handling, i.e., imagecache in core. See:
        ## http://drupal.org/node/371374.
        location ~* /files/styles/ {
            ## Image hotlinking protection. If you want hotlinking
            ## protection for your images uncomment the following line.
            #include apps/drupal/hotlinking_protection.conf;

            access_log off;
            expires 30d;
            try_files $uri {{ self.drupal_target() }};
        }

        ## Advanced Aggregation module CSS
        ## support. http://drupal.org/project/advagg.
        location ^~ /sites/default/files/advagg_css/ {
            expires max;
            add_header ETag '';
            add_header Last-Modified 'Wed, 20 Jan 1988 04:20:42 GMT';
            add_header Accept-Ranges '';

            location ~* /sites/default/files/advagg_css/css[_[:alnum:]]+\.css$ {
                access_log off;
                try_files $uri {{ self.drupal_target() }};
            }
        }

        ## Advanced Aggregation module JS
        ## support. http://drupal.org/project/advagg.
        location ^~ /sites/default/files/advagg_js/ {
            expires max;
            add_header ETag '';
            add_header Last-Modified 'Wed, 20 Jan 1988 04:20:42 GMT';
            add_header Accept-Ranges '';

            location ~* /sites/default/files/advagg_js/js[_[:alnum:]]+\.js$ {
                access_log off;
                try_files $uri {{ self.drupal_target() }};
            }
        }

        ## XML Sitemap support.
        location ~* ^/[^\/]+/sitemap.xml$ {
            try_files $uri {{ self.drupal_target() }};
        }

        ## All static files will be served directly.
        location ~* ^.+\.(?:css|cur|js|jpe?g|gif|htc|ico|png|html|xml|otf|ttf|eot|woff|svg)$ {
            access_log off;
            expires 30d;
            ## No need to bleed constant updates. Send the all shebang in one
            ## fell swoop.
            tcp_nodelay off;
            ## Set the OS file cache.
            open_file_cache max=3000 inactive=120s;
            open_file_cache_valid 45s;
            open_file_cache_min_uses 2;
            open_file_cache_errors off;
            ## ETag support.
            etag on;
        }

        ## PDFs and powerpoint files handling.
        location ~* ^.+\.(?:pdf|pptx?)$ {
            expires 30d;
            ## No need to bleed constant updates. Send the all shebang in one
            ## fell swoop.
            tcp_nodelay off;
            ## ETag support.
            etag on;
        }

        ## Pseudo streaming of FLV files:
        ## http://wiki.nginx.org/HttpFlvStreamModule.
        ## If pseudo streaming isn't working, try to comment
        ## out in nginx.conf line with:
        ## add_header X-Frame-Options SAMEORIGIN;
        location ^~ /sites/default/files/video/flv {
            location ~* ^/sites/default/files/video/flv/.*\.flv$ {
                flv;
            }
        }

        ## Pseudo streaming of H264/AAC files.
        ## Cf. http://nginx.org/en/docs/http/ngx_http_mp4_module.html.
        location ^~ /sites/default/files/video/mp4 {
            location ~* ^/sites/default/files/video/mp4/.*\.(?:mp4|mov)$ {
                mp4;
                mp4_buffer_size 1M;
                mp4_max_buffer_size 5M;
            }
        }
        location ^~ /sites/default/files/audio/m4a {
            location ~* ^/sites/default/files/audio/m4a/.*\.m4a$ {
                mp4;
                mp4_buffer_size 1M;
                mp4_max_buffer_size 5M;
            }
        }

        ## Advanced Help module makes each module provided README available.
        location ^~ /help/ {
            location ~* ^/help/[^/]*/README\.txt$ {
                ## Include the specific FastCGI configuration. This is for a
                ## FCGI backend like php-cgi or php-fpm.
                include apps/drupal/fastcgi_drupal.conf;
                fastcgi_pass server;
            }
        }

        ## Replicate the Apache <FilesMatch> directive of Drupal standard
        ## .htaccess. Disable access to any code files. Return a 404 to curtail
        ## information disclosure. Hide also the text files.
        location ~* ^(?:.+\.(?:htaccess|make|txt|engine|inc|info|install|module|profile|po|pot|sh|.*sql|test|theme|tpl(?:\.php)?|xtmpl)|code-style\.pl|/Entries.*|/Repository|/Root|/Tag|/Template)$ {
            return 404;
        }

        ## First we try the URI and relay to {{ self.drupal_target() }} if not found.
        try_files $uri {{ self.drupal_target() }};
    }

    ########### Security measures ##########

    ## Restrict access to the strictly necessary PHP files. Reducing the
    ## scope for exploits. Handling of PHP code and the Drupal event loop.
    {% block drupal_location -%}
    location @drupal {
        ## Include the FastCGI config.
        include apps/drupal/fastcgi_drupal.conf;
        fastcgi_pass server;

        ## Filefield Upload progress
        ## http://drupal.org/project/filefield_nginx_progress support
        ## through the NginxUploadProgress modules.
        track_uploads uploads 60s;
    }

    location @drupal-no-args {
        ## Include the specific FastCGI configuration. This is for a
        ## FCGI backend like php-cgi or php-fpm.
        include apps/drupal/fastcgi_no_args_drupal.conf;
        fastcgi_pass server;
    }
    {%- endblock %}

    ## Disallow access to .bzr, .git, .hg, .svn, .cvs directories: return
    ## 404 as not to disclose information.
    location ^~ /.bzr {
        return 404;
    }

    location ^~ /.git {
        return 404;
    }

    location ^~ /.hg {
        return 404;
    }

    location ^~ /.svn {
        return 404;
    }

    location ^~ /.cvs {
        return 404;
    }

    ## Disallow access to patches directory.
    location ^~ /patches {
        return 404;
    }

    ## Disallow access to drush backup directory.
    location ^~ /backup {
        return 404;
    }

    ## Disable access logs for robots.txt.
    location = /robots.txt {
        access_log off;
        ## Add support for the robotstxt module
        ## http://drupal.org/project/robotstxt.
        try_files $uri {{ self.drupal_target_no_args() }};
    }

    ## RSS feed support.
    location = /rss.xml {
        try_files $uri {{ self.drupal_target_no_args() }};
    }

    ## XML Sitemap support.
    location = /sitemap.xml {
        try_files $uri {{ self.drupal_target_no_args() }};
    }

    ## Support for favicon. Return an 1x1 transparent GIF if it doesn't
    ## exist.
    location = /favicon.ico {
        expires 30d;
        try_files /favicon.ico @empty;
    }

    ## Return an in memory 1x1 transparent GIF.
    location @empty {
        expires 30d;
        empty_gif;
    }

    ## Any other attempt to access PHP files returns a 404.
    location ~* ^.+\.php$ {
        return 404;
    }

    ## Support for upload progress bar.
    include apps/drupal/{{ drupal_version }}_upload_progress.conf;
{% endblock %}
